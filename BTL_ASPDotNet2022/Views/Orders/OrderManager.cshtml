@inject IHttpContextAccessor _contextAccessor;

@model BTL_ASPDotNet2022.Models.OrderFilter;

@{
    ViewData["Title"] = "Manager order:";
    Layout = "_AdminLayout";

    var RoleLogin = _contextAccessor.HttpContext.Session.GetString("RoleLogin");
}

<h1>@ViewData["Title"]</h1>

<hr />
<form asp-action="OrderManager">
    Order id: <input type="text" asp-for="SearchString" /> | 
    Status: <select asp-for="StatusFilter" asp-items="Model.StatusList">
                <option value="">All</option>
            </select>
    <input type="submit" class="btn btn-primary" value="Filter" />
</form>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderList[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderList[0].OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderList[0].Account.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderList[0].OrderStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.OrderList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Account.Username)
            </td>
            <td>
                <p class="@Html.DisplayFor(modelItem => item.OrderStatus)">@Html.DisplayFor(modelItem => item.OrderStatus)</p>
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if(RoleLogin == "master"){
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
